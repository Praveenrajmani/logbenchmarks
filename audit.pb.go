// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: audit.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectVersionProto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectName    string                 `protobuf:"bytes,1,opt,name=objectName,proto3" json:"objectName,omitempty"`
	VersionId     string                 `protobuf:"bytes,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectVersionProto) Reset() {
	*x = ObjectVersionProto{}
	mi := &file_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectVersionProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectVersionProto) ProtoMessage() {}

func (x *ObjectVersionProto) ProtoReflect() protoreflect.Message {
	mi := &file_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectVersionProto.ProtoReflect.Descriptor instead.
func (*ObjectVersionProto) Descriptor() ([]byte, []int) {
	return file_audit_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectVersionProto) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *ObjectVersionProto) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type API struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Bucket              string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Object              string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Objects             []*ObjectVersionProto  `protobuf:"bytes,4,rep,name=objects,proto3" json:"objects,omitempty"`
	Status              string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	StatusCode          int32                  `protobuf:"varint,6,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Rx                  int64                  `protobuf:"varint,7,opt,name=rx,proto3" json:"rx,omitempty"`
	Tx                  int64                  `protobuf:"varint,8,opt,name=tx,proto3" json:"tx,omitempty"`
	TxHeaders           int64                  `protobuf:"varint,9,opt,name=txHeaders,proto3" json:"txHeaders,omitempty"`
	TimeToFirstByte     string                 `protobuf:"bytes,10,opt,name=timeToFirstByte,proto3" json:"timeToFirstByte,omitempty"`
	TimeToFirstByteInNS string                 `protobuf:"bytes,11,opt,name=timeToFirstByteInNS,proto3" json:"timeToFirstByteInNS,omitempty"`
	TimeToResponse      string                 `protobuf:"bytes,12,opt,name=timeToResponse,proto3" json:"timeToResponse,omitempty"`
	TimeToResponseInNS  string                 `protobuf:"bytes,13,opt,name=timeToResponseInNS,proto3" json:"timeToResponseInNS,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *API) Reset() {
	*x = API{}
	mi := &file_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *API) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*API) ProtoMessage() {}

func (x *API) ProtoReflect() protoreflect.Message {
	mi := &file_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use API.ProtoReflect.Descriptor instead.
func (*API) Descriptor() ([]byte, []int) {
	return file_audit_proto_rawDescGZIP(), []int{1}
}

func (x *API) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *API) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *API) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *API) GetObjects() []*ObjectVersionProto {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *API) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *API) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *API) GetRx() int64 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *API) GetTx() int64 {
	if x != nil {
		return x.Tx
	}
	return 0
}

func (x *API) GetTxHeaders() int64 {
	if x != nil {
		return x.TxHeaders
	}
	return 0
}

func (x *API) GetTimeToFirstByte() string {
	if x != nil {
		return x.TimeToFirstByte
	}
	return ""
}

func (x *API) GetTimeToFirstByteInNS() string {
	if x != nil {
		return x.TimeToFirstByteInNS
	}
	return ""
}

func (x *API) GetTimeToResponse() string {
	if x != nil {
		return x.TimeToResponse
	}
	return ""
}

func (x *API) GetTimeToResponseInNS() string {
	if x != nil {
		return x.TimeToResponseInNS
	}
	return ""
}

type ProtoAuditLogList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*ProtoAuditLog       `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoAuditLogList) Reset() {
	*x = ProtoAuditLogList{}
	mi := &file_audit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoAuditLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAuditLogList) ProtoMessage() {}

func (x *ProtoAuditLogList) ProtoReflect() protoreflect.Message {
	mi := &file_audit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAuditLogList.ProtoReflect.Descriptor instead.
func (*ProtoAuditLogList) Descriptor() ([]byte, []int) {
	return file_audit_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoAuditLogList) GetEntries() []*ProtoAuditLog {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ProtoAuditLog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Version        string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	DeploymentId   string                 `protobuf:"bytes,2,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	Time           string                 `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Event          string                 `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	Type           string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Trigger        string                 `protobuf:"bytes,6,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Api            *API                   `protobuf:"bytes,7,opt,name=api,proto3" json:"api,omitempty"`
	RemoteHost     string                 `protobuf:"bytes,8,opt,name=remoteHost,proto3" json:"remoteHost,omitempty"`
	RequestId      string                 `protobuf:"bytes,9,opt,name=requestId,proto3" json:"requestId,omitempty"`
	UserAgent      string                 `protobuf:"bytes,10,opt,name=userAgent,proto3" json:"userAgent,omitempty"`
	RequestPath    string                 `protobuf:"bytes,11,opt,name=requestPath,proto3" json:"requestPath,omitempty"`
	RequestHost    string                 `protobuf:"bytes,12,opt,name=requestHost,proto3" json:"requestHost,omitempty"`
	RequestQuery   map[string]string      `protobuf:"bytes,13,rep,name=requestQuery,proto3" json:"requestQuery,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestHeader  map[string]string      `protobuf:"bytes,14,rep,name=requestHeader,proto3" json:"requestHeader,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResponseHeader map[string]string      `protobuf:"bytes,15,rep,name=responseHeader,proto3" json:"responseHeader,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Tags           map[string]string      `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AccessKey      string                 `protobuf:"bytes,17,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	ParentUser     string                 `protobuf:"bytes,18,opt,name=parentUser,proto3" json:"parentUser,omitempty"`
	Error          string                 `protobuf:"bytes,19,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProtoAuditLog) Reset() {
	*x = ProtoAuditLog{}
	mi := &file_audit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoAuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAuditLog) ProtoMessage() {}

func (x *ProtoAuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_audit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAuditLog.ProtoReflect.Descriptor instead.
func (*ProtoAuditLog) Descriptor() ([]byte, []int) {
	return file_audit_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoAuditLog) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProtoAuditLog) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *ProtoAuditLog) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ProtoAuditLog) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *ProtoAuditLog) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoAuditLog) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *ProtoAuditLog) GetApi() *API {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ProtoAuditLog) GetRemoteHost() string {
	if x != nil {
		return x.RemoteHost
	}
	return ""
}

func (x *ProtoAuditLog) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ProtoAuditLog) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ProtoAuditLog) GetRequestPath() string {
	if x != nil {
		return x.RequestPath
	}
	return ""
}

func (x *ProtoAuditLog) GetRequestHost() string {
	if x != nil {
		return x.RequestHost
	}
	return ""
}

func (x *ProtoAuditLog) GetRequestQuery() map[string]string {
	if x != nil {
		return x.RequestQuery
	}
	return nil
}

func (x *ProtoAuditLog) GetRequestHeader() map[string]string {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *ProtoAuditLog) GetResponseHeader() map[string]string {
	if x != nil {
		return x.ResponseHeader
	}
	return nil
}

func (x *ProtoAuditLog) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProtoAuditLog) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *ProtoAuditLog) GetParentUser() string {
	if x != nil {
		return x.ParentUser
	}
	return ""
}

func (x *ProtoAuditLog) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_audit_proto protoreflect.FileDescriptor

var file_audit_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x22, 0x52, 0x0a, 0x12, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa8, 0x03, 0x0a, 0x03, 0x41, 0x50, 0x49,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x72,
	0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x42, 0x79,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x69, 0x6d,
	0x65, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x49, 0x6e, 0x4e, 0x53,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x49, 0x6e, 0x4e, 0x53, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x4e, 0x53, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x6e, 0x4e, 0x53, 0x22, 0x43, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xd7, 0x07, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_audit_proto_rawDescOnce sync.Once
	file_audit_proto_rawDescData []byte
)

func file_audit_proto_rawDescGZIP() []byte {
	file_audit_proto_rawDescOnce.Do(func() {
		file_audit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_audit_proto_rawDesc), len(file_audit_proto_rawDesc)))
	})
	return file_audit_proto_rawDescData
}

var file_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_audit_proto_goTypes = []any{
	(*ObjectVersionProto)(nil), // 0: audit.ObjectVersionProto
	(*API)(nil),                // 1: audit.API
	(*ProtoAuditLogList)(nil),  // 2: audit.ProtoAuditLogList
	(*ProtoAuditLog)(nil),      // 3: audit.ProtoAuditLog
	nil,                        // 4: audit.ProtoAuditLog.RequestQueryEntry
	nil,                        // 5: audit.ProtoAuditLog.RequestHeaderEntry
	nil,                        // 6: audit.ProtoAuditLog.ResponseHeaderEntry
	nil,                        // 7: audit.ProtoAuditLog.TagsEntry
}
var file_audit_proto_depIdxs = []int32{
	0, // 0: audit.API.objects:type_name -> audit.ObjectVersionProto
	3, // 1: audit.ProtoAuditLogList.entries:type_name -> audit.ProtoAuditLog
	1, // 2: audit.ProtoAuditLog.api:type_name -> audit.API
	4, // 3: audit.ProtoAuditLog.requestQuery:type_name -> audit.ProtoAuditLog.RequestQueryEntry
	5, // 4: audit.ProtoAuditLog.requestHeader:type_name -> audit.ProtoAuditLog.RequestHeaderEntry
	6, // 5: audit.ProtoAuditLog.responseHeader:type_name -> audit.ProtoAuditLog.ResponseHeaderEntry
	7, // 6: audit.ProtoAuditLog.tags:type_name -> audit.ProtoAuditLog.TagsEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_audit_proto_init() }
func file_audit_proto_init() {
	if File_audit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_audit_proto_rawDesc), len(file_audit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_audit_proto_goTypes,
		DependencyIndexes: file_audit_proto_depIdxs,
		MessageInfos:      file_audit_proto_msgTypes,
	}.Build()
	File_audit_proto = out.File
	file_audit_proto_goTypes = nil
	file_audit_proto_depIdxs = nil
}
